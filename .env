# .env - 이 파일은 Git에 커밋하지 마세요!

# --- 데이터베이스 설정 ---
# PostgreSQL 데이터베이스 연결 URL
# 형식: postgresql+asyncpg://<사용자명>:<비밀번호>@<호스트>:<포트>/<데이터베이스명>
# Docker Compose를 사용한다면 'db_host'는 보통 데이터베이스 서비스 이름이 됩니다.
DATABASE_URL="postgresql+asyncpg://wims:wims1234@localhost:5432/wims_dbv1"
# 개발 환경에서 Docker Compose를 사용한다면:
# DATABASE_URL="postgresql+asyncpg://wims_user:wims_password@db:5432/wims_db"


# --- JWT (JSON Web Token) 설정 ---
# JWT 토큰 서명에 사용되는 시크릿 키입니다. 매우 길고 복잡하며 예측 불가능한 문자열이어야 합니다.
# 예: openssl rand -hex 32
SECRET_KEY="abaa9d61432f35fb48f93e2a1b1076861e17dae2e123de1526463cbfc1811eaf"
# JWT 서명에 사용되는 알고리즘입니다. (예: HS256, RS256)
ALGORITHM="HS256"
# Access Token의 만료 시간 (분 단위)
ACCESS_TOKEN_EXPIRE_MINUTES=30


# --- 기타 애플리케이션 설정 (필요에 따라 추가) ---
# 애플리케이션 환경 (development, production, testing)
APP_ENV="development"
# 디버그 모드 활성화/비활성화 (True/False)
DEBUG_MODE="True"

# --- 애플리케이션 설정 ---
# 애플리케이션 이름
APP_NAME="WIMS Backend API"

# 디버그 모드 활성화 여부 (개발 환경에서만 True로 설정)
# True로 설정 시, 개발에 유용한 추가 정보(예: SQL 쿼리 로그)가 출력될 수 있습니다.
DEBUG_MODE=True

# CORS(Cross-Origin Resource Sharing) 허용 오리진 목록 (쉼표로 구분)
# 프론트엔드 애플리케이션이 실행되는 URL을 여기에 추가합니다.
# 개발 중에는 "http://localhost:3000" (React 기본) 또는 "*" (모든 오리진 허용, 배포 시에는 권장되지 않음)
CORS_ORIGINS=["http://localhost:3000", "http://localhost:8000"]

# --- 파일 업로드 설정 ---
# 이미지 등 업로드된 파일이 저장될 서버 내 디렉토리 경로
# 이 경로는 백엔드 애플리케이션이 실행되는 컨테이너/서버 내의 경로입니다.
# 배포 시에는 볼륨 마운트 등을 통해 영구적인 스토리지로 변경해야 합니다.
# UPLOAD_DIR="uploaded_files"
# 또는
UPLOAD_DIR=./data/uploads
# 또는 절대 경로 (예: /home/blue/projects/wims/backend/data/uploads)